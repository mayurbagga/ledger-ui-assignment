import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { formatCurrency } from '@/utils/accounting';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { TrendingUp, TrendingDown, DollarSign, Wallet } from 'lucide-react';
import { useMediaQuery } from '@/hooks/useMediaQuery';
import { ACCOUNT_TYPE_MAP } from '@/constants/accounts';
export var AccountBalanceSummary = React.memo(function (_a) {
    var balances = _a.balances;
    var totalAssets = balances
        .filter(function (b) { return ACCOUNT_TYPE_MAP[b.account] === 'asset'; })
        .reduce(function (sum, b) { return sum + b.balance; }, 0);
    var totalLiabilities = balances
        .filter(function (b) { return ACCOUNT_TYPE_MAP[b.account] === 'liability'; })
        .reduce(function (sum, b) { return sum + Math.abs(b.balance); }, 0);
    var isMobile = useMediaQuery('(max-width: 768px)');
    if (isMobile) {
        return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-2 gap-3", children: [_jsxs("div", { className: "bg-gradient-to-br from-green-50 to-green-100/50 dark:from-green-950/50 dark:to-green-900/30 rounded-lg p-3 border", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(TrendingUp, { className: "h-4 w-4 text-green-600 dark:text-green-400" }), _jsx("span", { className: "text-xs font-medium text-green-700 dark:text-green-300", children: "Assets" })] }), _jsx("p", { className: "text-base font-bold text-green-800 dark:text-green-200 font-mono", children: formatCurrency(totalAssets) })] }), _jsxs("div", { className: "bg-gradient-to-br from-red-50 to-red-100/50 dark:from-red-950/50 dark:to-red-900/30 rounded-lg p-3 border", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(TrendingDown, { className: "h-4 w-4 text-red-600 dark:text-red-400" }), _jsx("span", { className: "text-xs font-medium text-red-700 dark:text-red-300", children: "Liabilities" })] }), _jsx("p", { className: "text-base font-bold text-red-800 dark:text-red-200 font-mono", children: formatCurrency(totalLiabilities) })] })] }), _jsxs("div", { className: "bg-background border rounded-lg", children: [_jsx("div", { className: "p-3 border-b", children: _jsxs("h3", { className: "font-semibold text-sm flex items-center gap-2", children: [_jsx(Wallet, { className: "h-4 w-4" }), "Account Balances"] }) }), _jsx("div", { className: "p-3", children: balances.length === 0 ? (_jsxs("div", { className: "text-center py-6", children: [_jsx("div", { className: "mx-auto w-10 h-10 bg-muted/30 rounded-full flex items-center justify-center mb-2", children: _jsx(DollarSign, { className: "h-5 w-5 text-muted-foreground/50" }) }), _jsx("p", { className: "text-xs text-muted-foreground", children: "No account balances to display." })] })) : (_jsx("div", { className: "space-y-2", children: balances.map(function (balance) { return (_jsxs("div", { className: "flex justify-between items-center p-2 rounded border bg-background/50 hover:bg-muted/20 transition-colors", children: [_jsxs("div", { className: "flex items-center gap-2 flex-1 min-w-0", children: [_jsx("div", { className: "w-2 h-2 rounded-full flex-shrink-0 ".concat(balance.balance >= 0
                                                        ? 'bg-green-500'
                                                        : 'bg-red-500') }), _jsx("span", { className: "font-medium text-xs truncate", children: balance.account })] }), _jsx(Badge, { variant: balance.balance >= 0 ? 'default' : 'destructive', className: "font-mono text-xs font-semibold ml-2 flex-shrink-0", children: formatCurrency(balance.balance) })] }, balance.account)); }) })) })] })] }));
    }
    // Desktop layout
    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-2 gap-3", children: [_jsx(Card, { className: "shadow-sm border-0 bg-gradient-to-br from-green-50 to-green-100/50 dark:from-green-950/50 dark:to-green-900/30", children: _jsxs(CardContent, { className: "p-4", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(TrendingUp, { className: "h-4 w-4 text-green-600 dark:text-green-400" }), _jsx("span", { className: "text-xs font-medium text-green-700 dark:text-green-300", children: "Assets" })] }), _jsx("p", { className: "text-lg font-bold text-green-800 dark:text-green-200 font-mono", children: formatCurrency(totalAssets) })] }) }), _jsx(Card, { className: "shadow-sm border-0 bg-gradient-to-br from-red-50 to-red-100/50 dark:from-red-950/50 dark:to-red-900/30", children: _jsxs(CardContent, { className: "p-4", children: [_jsxs("div", { className: "flex items-center gap-2 mb-2", children: [_jsx(TrendingDown, { className: "h-4 w-4 text-red-600 dark:text-red-400" }), _jsx("span", { className: "text-xs font-medium text-red-700 dark:text-red-300", children: "Liabilities" })] }), _jsx("p", { className: "text-lg font-bold text-red-800 dark:text-red-200 font-mono", children: formatCurrency(totalLiabilities) })] }) })] }), _jsxs(Card, { className: "shadow-sm", children: [_jsx(CardHeader, { className: "pb-4", children: _jsxs(CardTitle, { className: "flex items-center gap-2 text-lg", children: [_jsx(Wallet, { className: "h-5 w-5" }), "Account Balances"] }) }), _jsx(CardContent, { children: balances.length === 0 ? (_jsxs("div", { className: "text-center py-8", children: [_jsx("div", { className: "mx-auto w-12 h-12 bg-muted/50 rounded-full flex items-center justify-center mb-3", children: _jsx(DollarSign, { className: "h-6 w-6 text-muted-foreground/50" }) }), _jsx("p", { className: "text-sm text-muted-foreground", children: "No account balances to display." })] })) : (_jsx("div", { className: "space-y-3", children: balances.map(function (balance) { return (_jsxs("div", { className: "flex justify-between items-center p-3 rounded-lg border bg-background/50 hover:bg-muted/30 transition-colors", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "w-2 h-2 rounded-full ".concat(balance.balance >= 0
                                                    ? 'bg-green-500'
                                                    : 'bg-red-500') }), _jsx("span", { className: "font-medium text-sm", children: balance.account })] }), _jsx(Badge, { variant: balance.balance >= 0 ? 'default' : 'destructive', className: "font-mono text-sm font-semibold", children: formatCurrency(balance.balance) })] }, balance.account)); }) })) })] })] }));
});
